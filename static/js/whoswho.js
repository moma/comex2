// Generated by CoffeeScript 1.3.1
var completion, gexf, ids;

jQuery.fn.disableTextSelect = function() {
  return this.each(function() {
    if (typeof this.onselectstart !== "undefined") {
      return this.onselectstart = function() {
        return false;
      };
    } else if (typeof this.style.MozUserSelect !== "undefined") {
      return this.style.MozUserSelect = "none";
    } else {
      this.onmousedown = function() {
        return false;
      };
      return this.style.cursor = "default";
    }
  });
};


ids = 0;

completion = {};

gexf = "";

// module fragment to expose selected functions
var whoswho = {};

whoswho = (function(ww) {

    // filter type => label
    ww.filters = {
        'countries': "in",
        'institutions': "from",
        'laboratories': "working at",
        'keywords': "working on",
        'tags': "tagged"
    }

    // autocomplete
    ww.popfilter = function(type, options) {
        var label, footer, header, id, id1, id2, input, closebox, labelization;

        if (!options) {
            options = {}
        }

        if (! options.prefill) {
            options['prefill']=''
        }

        label = ww.filters[type];
        id = ids++;
        id1 = "filter" + id;
        id2 = "combo" + id;
        id3 = "close" + id;
        header = "<li id=\"" + id1 + "\" class=\"comex-nav-item filter\" style=\"padding-top: 5px;\">";
        labelization = "<span style=\"color: #fff;\">&nbsp; " + label + " </span>";
        input = "<input type=\"text\" id=\"" + id2 + "\" class=\"medium filter" + type + "\" placeholder=\"" + type + "\" / value=\""+options['prefill']+"\">";
        closebox = "<div id=\""+id3+"\" for=\""+id1+"\" class=\"filter-close operation-light\">x</div>"
        footer = "</li>;";
        $(header + labelization + input + closebox + footer).insertBefore("#refine");
        $('#' + id3).click(whoswho.closeThisBox)

        // debug
        // console.log("whoswho.popfilter: adding autocomplete menu", $("#" + id1))

        $("#" + id2).autocomplete({
            source: function (req, resp) {
                $.ajax({
                    dataType: "json",
                    type: "GET",
                    // url: "/search_filter.php",
                    url: "/services/api/aggs",
                    data: {
                        "field": type,
                        "like": req.term,
                    },
                    success: function(data){
                        resp(data.map(function(info) {
                            return {
                                'label': info.x,
                                'score': info.n
                            }
                        }))
                    },
                    error: function(response) {
                        console.log("ERROR from search_filter AJAX", response)
                    }
                }) ;
            },
            minLength: 2
        })

        $("" + id1).hide();
        $("#" + id1).show();
        $("#" + id2).focus();
        whoswho.shiftPage()
        return false;
    };

    // small filter closing function
    ww.closeThisBox = function() {
      var targetId = this.getAttribute("for")
      if (targetId) {
          var tgtBox = document.getElementById(targetId)
          // start transition
          tgtBox.style.opacity = 0
          // remove box
          setTimeout(function(){tgtBox.remove(); whoswho.shiftPage();}, 500)
          return true
      }
      else {
          console.warn('closeThisBox: no @for attribute!')
          return false
      }
    }

    // call it to adjust page position if topbar becomes thick
    ww.shiftPage = function() {
      // console.log("SHIFT PAGE")
      var topbar = document.getElementsByClassName('topbar')[0]
      var page = document.getElementsByClassName('page')[0]
      if (!page) {
          page = document.getElementsByClassName('full-directory')[0]
      }
      if (topbar && page) {
          var topContainer = topbar.querySelector('.container-fluid')
          if (topContainer && topContainer.offsetHeight) {
              page.style.marginTop = topContainer.offsetHeight
          }
      }
    }

    return ww;
})(whoswho);

$(document).ready(function() {
  var cache, closeBox, collectFilters, loadGraph;
  console.log("document ready.. installing whoswho");
  loadGraph = function(g) {
    gexf = g;
    console.log("url query: " + g);
    console.log("injecting applet");
    if ($('#frame').length === 0) {
      return $("#visualization").html("<iframe src=\"tinaframe.html" + (location.search != null ? location.search : '') + "\" class=\"frame\" border=\"0\" frameborder=\"0\" scrolling=\"no\" id=\"frame\" name=\"frame\"></iframe>");
    } else {
      return console.log("applet already exists");
    }
  };

  // jQuery(".unselectable").disableTextSelect();
  jQuery(".unselectable").disableSelection();
  $(".unselectable").hover((function() {
    return $(this).css("cursor", "default");
  }), function() {
    return $(this).css("cursor", "auto");
  });
  $("#search-form").hide();
  $(".topbar").hover((function() {
    return $(this).stop().animate({
      opacity: 0.98
    }, "fast");
  }), function() {
    return $(this).stop().animate({
      opacity: 0.93
    }, "fast");
  });

  $("#addfiltercountry").click(function() {
    return whoswho.popfilter("countries");
  });
  // $("#addfilterorganization").click(function() {
  //   return whoswho.popfilter("organizations");
  // });
  $("#addfilterinstitution").click(function() {
    return whoswho.popfilter("institutions");
  });
  $("#addfilterlaboratory").click(function() {
    return whoswho.popfilter("laboratories");
  });
  $("#addfilterkeyword").click(function() {
    return whoswho.popfilter("keywords");
  });
  $("#addfiltertag").click(function() {
    return whoswho.popfilter("tags");
  });
  $("#register").click(function() {
    return window.open("/services/user/register/");
  });

  $("#searchname").autocomplete({
    source: function (req, resp) {
        $.ajax({
            dataType: "json",
            type: "GET",
            url: "/search_scholar.php",
            data: {
                "category": "login",
                "login": req.term,
                // TODO rename s/login/uid/ in search_scholar.php
            },
            success: function(data){
                var compList = [] ;
                if (data.results) {
                    for (var i in data.results) {
                        var item = data.results[i]
                        compList.push({
                            // TODO middle initials here and in search_scholar
                            'label': item.firstname + ' ' + item.lastname,
                            'id': item.id
                        })
                    }
                }
                resp(compList)
            },
            error: function(response) {
                console.log("ERROR from search_scholar AJAX", response)
            }
        }) ;
    },
    minLength: 2,
    select: function(event, ui) {
      if (ui.item != null) {
        console.log("Selected: " + ui.item.label + " aka " + ui.item.id);

        // NB #searchname's value <= ui.label
        //     (by default widget behavior)

        // change the 2 onclick events
        changeTargetId(ui.item.id)
      }
    }
  })

  changeTargetId = function(nodeId) {
      document.getElementById('print2').onclick = function() {
        if (uinfo && uinfo.luid) {
          return window.open("/print_scholar_directory.php?query=" + nodeId + "&user="+uinfo.luid);
        }
        else {
          return window.open("/print_scholar_directory.php?query=" + nodeId);
        }
      }
      document.getElementById('generate2').onclick = function() {
        // POSS add user in url params and find a way to load and call cmxClt.elts.topbar.create
        return window.open('/explorerjs.html?sourcemode="api"&type="uid"&nodeidparam="' + nodeId + '"');
      }
  }

  // main form collect function
  collectFilters = function(cb) {
    var collect, query;
    collect = function(k) {
      var t;
      t = [];
      console.log("collecting .filter:" + k);
      $(".filter" + k).each(function(i, e) {
        var value;

        // debug
        // console.log('collecting (filter '+k+') from elt:' + e)

        value = $(e).val();
        if (value != null && value != "") {
          console.log("got: " + value);
          value = $.trim(value);
          console.log("sanitized: " + value);
          if (value !== " " || value !== "") {
            console.log("keeping " + value);
            return t.push(value);
          }
        }
      });
      return t;
    };
    console.log("reading filters forms..");


    query = {

    // TODO in the future multiple categories
    // categorya: $.trim($("#categorya :selected").text()),
    // categoryb: $.trim($("#categoryb :selected").text()),

    // TODO in the future coloredby
    // query.coloredby =  []

    }

    for (filterName of ["keywords", "countries", "laboratories", "tags", "institutions"]) {
        var filterValuesArray = collect(filterName)

        // we add only if something to add :)
        if (filterValuesArray.length) {
            query[filterName] = filterValuesArray
        }
    }

    console.log("raw query: ");
    console.log(query);

    query = encodeURIComponent(JSON.stringify(query));

    // debug
    // console.log("calling callback with encoded query:", query)

    return cb(query);
  };


  // refine filters => tinawebjs graphexplorer
  $("#generate").click(function() {
    console.log("clicked on generate")
    // console.log("initiating graphexplorer")
    return collectFilters(function(query) {
      // debug
      // console.log("collected filters: " + query);
      // empty query => no map + warning
      if (query == "" || decodeURI(query) == "{}") {
          if (document.getElementById('refine-warning')) {
            cmxClt.elts.box.toggleBox("refine-warning")
          }
          else {
            cmxClt.elts.box.addGenericBox('refine-warning',
                "No filters were selected",
                "Please fill at least a filter before generating a MAP <br/>(mapping without filters takes a long time and overloads servers)"
              )
            cmxClt.elts.box.toggleBox("refine-warning")
          }
          return null
      }
      return window.open('/explorerjs.html?sourcemode="api"&type="filter"&nodeidparam="' + escape(query) +'"');
      //return loadGraph("getgraph.php?query=" + query);
    });
  });
  $("#print").click(function() {
    console.log("clicked on print");
    return collectFilters(function(query) {
      // debug
      // console.log("collected filters: " + query);
      if (uinfo && uinfo.luid) {
        return window.open("/print_directory.php?query=" + query + "&user="+uinfo.luid);
      }
      else {
        return window.open("/print_directory.php?query=" + query);
      }
    });
  });
  $("#loading").hide();
  cache = {};
  return xhrs = {};
});
